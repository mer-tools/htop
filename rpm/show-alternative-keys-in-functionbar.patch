diff --git a/FunctionBar.c b/FunctionBar.c
index 659f410..113b499 100644
--- a/FunctionBar.c
+++ b/FunctionBar.c
@@ -15,6 +15,12 @@ typedef struct FunctionBar_ {
 #include <stdlib.h>
 
 
+static bool AltKeys = false;
+static const char* Alt_FunctionBar_FKeys[] = {" h", " S", " /", " \\", " t", " >", " ]", " [", " k", " q", NULL};
+void FunctionBar_useAltKeys(bool use_alt_keys) {
+   AltKeys = use_alt_keys;
+}
+
 static const char* const FunctionBar_FKeys[] = {"F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", NULL};
 
 static const char* const FunctionBar_FLabels[] = {"      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ", NULL};
@@ -51,7 +57,7 @@ FunctionBar* FunctionBar_new(const char** functions, const char** keys, int* eve
       this->size = i;
    } else {
       this->staticData = true;
-      this->keys = (char**) FunctionBar_FKeys;
+      this->keys = AltKeys ? (char**) Alt_FunctionBar_FKeys : (char**) FunctionBar_FKeys;
       this->events = FunctionBar_FEvents;
       this->size = 10;
    }
diff --git a/FunctionBar.h b/FunctionBar.h
index 1975fa3..bf2cac4 100644
--- a/FunctionBar.h
+++ b/FunctionBar.h
@@ -17,6 +17,8 @@ typedef struct FunctionBar_ {
    bool staticData;
 } FunctionBar;
 
+void FunctionBar_useAltKeys(bool use_alt_keys);
+
 FunctionBar* FunctionBar_newEnterEsc(const char* enter, const char* esc);
 
 FunctionBar* FunctionBar_new(const char* const* functions, const char* const* keys, const int* events);
diff --git a/htop.c b/htop.c
index 239b5d6..be7b1f4 100644
--- a/htop.c
+++ b/htop.c
@@ -93,6 +93,7 @@ static CommandLineSettings parseArguments(int argc, char** argv) {
       {"no-unicode", no_argument,         0, 'U'},
       {"tree",       no_argument,         0, 't'},
       {"pid",        required_argument,   0, 'p'},
+      {"alt-keys",   no_argument,         0, 'a'},
       {0,0,0,0}
    };
 
@@ -101,6 +102,9 @@ static CommandLineSettings parseArguments(int argc, char** argv) {
    while ((opt = getopt_long(argc, argv, "hvmCs:td:u::Up:", long_opts, &opti))) {
       if (opt == EOF) break;
       switch (opt) {
+         case 'a':
+            FunctionBar_useAltKeys(true);
+            break;
          case 'h':
             printHelpFlag();
             break;
